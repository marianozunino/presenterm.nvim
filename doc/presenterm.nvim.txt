*presenterm.nvim.txt*        For NVIM v0.8.0        Last change: 2025 March 29

==============================================================================
Table of Contents                          *presenterm.nvim-table-of-contents*

1. Presenterm.nvim                           |presenterm.nvim-presenterm.nvim|
  - Features                        |presenterm.nvim-presenterm.nvim-features|
  - Installation                |presenterm.nvim-presenterm.nvim-installation|
  - Configuration              |presenterm.nvim-presenterm.nvim-configuration|
  - Usage                              |presenterm.nvim-presenterm.nvim-usage|
  - Development                  |presenterm.nvim-presenterm.nvim-development|
  - License                          |presenterm.nvim-presenterm.nvim-license|

==============================================================================
1. Presenterm.nvim                           *presenterm.nvim-presenterm.nvim*

A Neovim plugin to detect and launch Presenterm
<https://github.com/mzunino/presenterm> presentations in an external terminal
window.


FEATURES                            *presenterm.nvim-presenterm.nvim-features*

- Automatically detects Presenterm files (`.presenterm`, `.pterm`, and compatible Markdown files)
- Launches presentations in your preferred terminal
- Supports custom terminal commands with placeholders
- Automatically cleans up processes when closing buffers or exiting Neovim


INSTALLATION                    *presenterm.nvim-presenterm.nvim-installation*


USING LAZY.NVIM ~

>lua
    {
      "mzunino/presenterm.nvim",
      config = function()
        require("presenterm").setup({
          -- your configuration options here
        })
      end
    }
<


USING PACKER.NVIM ~

>lua
    use {
      "mzunino/presenterm.nvim",
      config = function()
        require("presenterm").setup()
      end
    }
<


CONFIGURATION                  *presenterm.nvim-presenterm.nvim-configuration*

The plugin comes with these default settings:

>lua
    require("presenterm").setup({
      -- Presenterm executable path (optional, can be nil)
      executable = "presenterm", -- set to nil or "" to use only terminal_cmd
    
      -- File patterns that should be recognized as Presenterm files
      patterns = {
        "*.presenterm",
        "*.pterm",
        "*.md", -- Markdown files can be Presenterm files too
      },
    
      -- Auto detection and launch
      auto_launch = false,
    
      -- Custom terminal command with placeholders
      -- {cmd} = The presenterm command with file path
      -- {file} = The file path
      -- {title} = The file title (filename without path)
      terminal_cmd = nil,
    })
<


CONFIGURATION EXAMPLES ~


AUTO-LAUNCH WITH DEFAULT TERMINAL:

>lua
    require("presenterm").setup({
      auto_launch = true
    })
<


USE A SPECIFIC TERMINAL (KITTY):

>lua
    require("presenterm").setup({
      terminal_cmd = "kitty --title 'Presenterm: {title}' {cmd}"
    })
<


LAUNCH USING TMUX:

>lua
    require("presenterm").setup({
      terminal_cmd = "tmux new-window -n 'Presenterm' '{cmd}'"
    })
<


CUSTOM LAUNCHER WITHOUT PRESENTERM:

>lua
    require("presenterm").setup({
      executable = nil,
      terminal_cmd = "my-custom-launcher {file}"
    })
<


USAGE                                  *presenterm.nvim-presenterm.nvim-usage*


COMMANDS ~

- `:PresentermLaunch` - Launch the current buffer in Presenterm


FILE DETECTION ~

Files are detected as Presenterm presentations if:

1. They have a `.presenterm` or `.pterm` extension
2. They are Markdown (`.md`) files with one of the following:- YAML frontmatter containing a "presenter:" field
- Horizontal rules (`---` or `%`) used as slide separators




DEVELOPMENT                      *presenterm.nvim-presenterm.nvim-development*


TESTING ~

The plugin includes tests using the Busted framework. To run tests:

>bash
    cd /path/to/presenterm.nvim
    nvim --headless -c "lua require('plenary.test_harness').test_directory('test', {minimal_init = 'test/minimal_init.lua'})"
<


LICENSE                              *presenterm.nvim-presenterm.nvim-license*

MIT

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
